---
description: 
globs: 
alwaysApply: true
---
# Coding pattern preferences
- Prefer simpler solutions
- Extract complicated, potentially reusable functionality to individual functions
- Avoid duplication of code whenever possible, which means checking for other areas of the codebase that might already have similar code and functionality
- Use docstrings for functions that are over 10 lines.
- Omit docstrings for trivial functions under five lines of code unless the functionality or purpose is not obvious
- When fixing an issue or bug, do not introduce a new pattern or technology without first exhausting all options for the existing implementation. And if you finally do this, make sure to remove the old ipmlementation afterwards so we don't have duplicate logic.
- Keep the codebase very clean and organized
- Avoid having files over 200-300 lines of code. Refactor at that point.
- Never overwrite my env file without first asking and confirming

# Testing
- When making non-trivial changes to a file, automatically run tests to ensure the changes didn't cause any regressions.

- When adding significant new features, add required tests to provide good code coverage. If a test suite for the program being worked on doesn't exist, implore the user (me) to create such a test and concisely suggest a good name and approach for doing so.